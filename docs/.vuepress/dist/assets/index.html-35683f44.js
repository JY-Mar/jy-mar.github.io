import{_ as r,M as a,p as s,q as c,R as e,t as n,N as o}from"./framework-96b046e1.js";const l={},i=e("h1",{id:"运算符",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#运算符","aria-hidden":"true"},"#"),n(" 运算符")],-1),d=e("h2",{id:"可选链",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#可选链","aria-hidden":"true"},"#"),n(" 可选链")],-1),_=e("p",null,[n("符号："),e("code",null,"?.")],-1),h=e("p",null,"ECMAScript 11[^1]新特性",-1),p={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Optional_chaining",target:"_blank",rel:"noopener noreferrer"},u=e("h2",{id:"展开",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#展开","aria-hidden":"true"},"#"),n(" 展开")],-1),f=e("p",null,[n("符号："),e("code",null,"...")],-1),x=e("p",null,[n("展开运算符是深拷贝也是浅拷贝，仅针对其一级基础数据为深拷贝，但对更深层嵌套的数据为浅拷贝。"),e("br"),e("code",null,"Object.assign"),n("是浅拷贝（完全浅拷贝），用作对象合并，仅针对其一级基础数据自右向左合并（右侧值覆盖左侧值），但对嵌套数据不会执行合并操作而是直接将整个嵌套对象作为整体的一级属性值向左合并。"),e("br"),n(" 带嵌套属性的对象若想将嵌套中属性也作合并操作，则"),e("code",null,"Object.assign"),n("完全不适合。")],-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_syntax",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"[^1]: This is the first footnote.",-1);function N(g,v){const t=a("ExternalLinkIcon");return s(),c("div",null,[i,d,_,h,e("p",null,[n("参考"),e("a",p,[n("MDN"),o(t)]),n("中的详细描述。")]),u,f,x,e("p",null,[n("参考"),e("a",b,[n("MDN"),o(t)]),n("中的详细描述。")]),m])}const O=r(l,[["render",N],["__file","index.html.vue"]]);export{O as default};
