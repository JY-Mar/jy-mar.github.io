import{_ as n,p as s,q as a,a1 as e}from"./framework-96b046e1.js";const p={},t=e(`<h1 id="代码优化" tabindex="-1"><a class="header-anchor" href="#代码优化" aria-hidden="true">#</a> 代码优化</h1><h2 id="首页加载优化" tabindex="-1"><a class="header-anchor" href="#首页加载优化" aria-hidden="true">#</a> 首页加载优化</h2><h3 id="路由懒加载" tabindex="-1"><a class="header-anchor" href="#路由懒加载" aria-hidden="true">#</a> 路由懒加载</h3><p>改直接<code>import</code>组件为动态引入，按需加载，只有在使用到时才会引入，阻止了在首次加载时直接加载所有所用到的组件导致渲染卡顿。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/order&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Order&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/order/order&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打包文件中去掉map文件" tabindex="-1"><a class="header-anchor" href="#打包文件中去掉map文件" aria-hidden="true">#</a> 打包文件中去掉map文件</h3><p><code>webpack</code>配置<code>productionSourceMap</code>为<code>false</code>，在打包生成时不会生成Source Map</p><blockquote><p>Source Map就是一个信息文件，里面存储了代码打包转换后的位置信息，实质是一个<code>json</code>描述文件，维护了打包前后的代码映射关系。</p></blockquote><h3 id="js文件压缩" tabindex="-1"><a class="header-anchor" href="#js文件压缩" aria-hidden="true">#</a> JS文件压缩</h3><p><code>UglifyJS</code>是命令行工具，用于压缩<code>JavaScript</code>代码。例：将echarts.js压缩。</p><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> uglify <span class="token parameter variable">-js</span> <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>uglifyjs app.js <span class="token parameter variable">-o</span> app.min.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="gzip打包" tabindex="-1"><a class="header-anchor" href="#gzip打包" aria-hidden="true">#</a> gzip打包</h3><p>gizp压缩是一种http请求优化方式，通过减少文件体积来提高加载速度。<br> html、js、css文件甚至json数据都可以用它压缩，可以减小60%以上的体积。</p><h4 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> compression-webpack-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1" aria-hidden="true">#</a> 使用</h4><ul><li>webpack配置（vue.config.js）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> CompressionPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;compression-webpack-plugin&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 是否生产模式</span>
<span class="token keyword">const</span> isProd <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span>
<span class="token keyword">const</span> vueConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token punctuation">,</span> <span class="token comment">// 其他配置</span>
  <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isProd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      config<span class="token punctuation">.</span>plugins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>config<span class="token punctuation">.</span>plugins<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">[</span>
        <span class="token comment">// 忽略所有momentJs的lcoale文件</span>
        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>IgnorePlugin</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\.\\/locale$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">moment$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token constant">APP_VERSION</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          <span class="token constant">GIT_HASH</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">getGitHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token constant">BUILD_DATE</span><span class="token operator">:</span> buildDate
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// 压缩成 .gz 文件</span>
        <span class="token keyword">new</span> <span class="token class-name">CompressionPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;[path][base].gz&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">algorithm</span><span class="token operator">:</span> <span class="token string">&#39;gzip&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(js|css|svg|woff|ttf|json|html|webp)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
          <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span>
          <span class="token literal-property property">minRatio</span><span class="token operator">:</span> <span class="token number">0.8</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// 压缩成 .br 文件，如果 zlib 报错无法解决，可以注释这段使用代码，一般本地没问题，需要注意线上服务器会可能发生找不到 zlib 的情况。</span>
        <span class="token keyword">new</span> <span class="token class-name">CompressionPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;[path][base].br&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">algorithm</span><span class="token operator">:</span> <span class="token string">&#39;brotliCompress&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(js|css|svg|woff|ttf|json|html|webp)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
          <span class="token literal-property property">compressionOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token punctuation">[</span>zlib<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">BROTLI_PARAM_QUALITY</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">11</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span>
          <span class="token literal-property property">minRatio</span><span class="token operator">:</span> <span class="token number">0.8</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">]</span><span class="token punctuation">]</span>
      <span class="token comment">// 开启分离 js</span>
      config<span class="token punctuation">.</span>optimization <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">runtimeChunk</span><span class="token operator">:</span> <span class="token string">&#39;single&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">maxInitialRequests</span><span class="token operator">:</span> <span class="token number">Infinity</span><span class="token punctuation">,</span>
          <span class="token literal-property property">minSize</span><span class="token operator">:</span> <span class="token number">20000</span><span class="token punctuation">,</span>
          <span class="token literal-property property">cacheGroups</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">vendor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
              <span class="token function">name</span> <span class="token punctuation">(</span><span class="token parameter">module</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// get the name. E.g. node_modules/packageName/not/this/part.js</span>
                <span class="token comment">// or node_modules/packageName</span>
                <span class="token keyword">const</span> packageName <span class="token operator">=</span> module<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/](.*?)([\\\\/]|$)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
                <span class="token comment">// npm package names are URL-safe, but some servers don&#39;t like @ symbols</span>
                <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">npm.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>packageName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;@&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// 为开发环境修改配置...</span>
      config<span class="token punctuation">.</span>plugins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>config<span class="token punctuation">.</span>plugins<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">[</span>
        <span class="token comment">// 忽略所有momentJs的lcoale文件</span>
        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>IgnorePlugin</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\.\\/locale$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">moment$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token constant">APP_VERSION</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          <span class="token constant">GIT_HASH</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">getGitHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token constant">BUILD_DATE</span><span class="token operator">:</span> buildDate
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// preview.pro.loacg.com only do not use in your production;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_PREVIEW</span> <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// add \`ThemeColorReplacer\` plugin to webpack plugins</span>
      config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">createThemeColorReplacerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 如果是生产模式，则添加externals</span>
    config<span class="token punctuation">.</span>externals <span class="token operator">=</span> isProd <span class="token operator">?</span> assetsCDN<span class="token punctuation">.</span>externals <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span> <span class="token comment">// 其他配置</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> vueConfig
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Nginx配置</li></ul><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>server {
  #gzip模块设置    
  #开启压缩
  gzip  on;       
  # 设置允许压缩的页面最小字节数，页面字节数从header头得content-length中进行获取。 默认值是0，不管页面多大都压缩。建议设置成大于2k的字节数，小于2k可能会越压越大。  
  gzip_min_length 2k;      
  # 设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。 例如 4 4k 代表以4k为单 位，按照原始数据大小以4k为单位的4倍申请内存。 4 8k 代表以8k为单位，按照原始数据大小以8k 为单位的4倍申请内存。      
  # 如果没有设置，默认值是申请跟原始数据相同大小的内存空间去存储gzip压缩结果。      
  gzip_buffers 4 16k;      
  #压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间
  gzip_comp_level 5;      
  # 默认值: gzip_types text/html (默认不对js/css文件进行压缩)      
  # 压缩类型，匹配MIME类型进行压缩      
  # 不能用通配符 text/*      
  # (无论是否指定)text/html默认已经压缩       
  # 设置哪压缩种文本文件可参考 conf/mime.types      
  gzip_types text/plain application/xjavascript text/css application/xml;     
  # 值为1.0和1.1 代表是否压缩http协议1.0，选择1.0则1.0和1.1都可以压缩      
  gzip_http_version 1.0       
  # IE6及以下禁止压缩
  gzip_disable &quot;MSIE [1-6]\\.&quot;;       
  # 默认值：off      
  # Nginx作为反向代理的时候启用，开启或者关闭后端服务器返回的结果，匹配的前提是后端服 务器必须要返回包含&quot;Via&quot;的 header头。      
  # off - 关闭所有的代理结果数据的压缩      
  # expired - 启用压缩，如果header头中包含 &quot;Expires&quot; 头信息      
  # no-cache - 启用压缩，如果header头中包含 &quot;Cache-Control:no-cache&quot; 头信息     
  # no-store - 启用压缩，如果header头中包含 &quot;Cache-Control:no-store&quot; 头信息     
  # private - 启用压缩，如果header头中包含 &quot;Cache-Control:private&quot; 头信息      
  # no_last_modified - 启用压缩,如果header头中不包含 &quot;Last-Modified&quot; 头信息     
  # no_etag - 启用压缩 ,如果header头中不包含 &quot;ETag&quot; 头信息      
  # auth - 启用压缩 , 如果header头中包含 &quot;Authorization&quot; 头信息      
  # any - 无条件启用压缩
  gzip_proxied expired no-cache no-store private auth;      
  # 给CDN和代理服务器使用，针对相同url，可以根据头信息返回压缩和非压缩副本      
  gzip_vary on;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="海量数据渲染优化" tabindex="-1"><a class="header-anchor" href="#海量数据渲染优化" aria-hidden="true">#</a> 海量数据渲染优化</h2>`,24),o=[t];function i(c,l){return s(),a("div",null,o)}const u=n(p,[["render",i],["__file","optimization.html.vue"]]);export{u as default};
